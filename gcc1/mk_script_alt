./mk_build_clean

builddir=../build/
bd=${builddir}
srcdir=../gcc-1.27/
sd=${srcdir}
incs="-Iinclude -I/usr/include/i386-linux-gnu/ -I${bd} -I${sd} "

set -x
set -e

cd gcc-1.27

pushd .

mkdir ${builddir}/libtemp
cd ${builddir}/libtemp;
for name in _eprintf _umulsi3 _mulsi3 _udivsi3 _divsi3 _umodsi3 _modsi3 _lshrsi3 _lshlsi3 _ashrsi3 _ashlsi3 _divdf3 _muldf3 _negdf2 _adddf3 _subdf3 _cmpdf2 _fixunsdfsi _fixunsdfdi _fixdfsi _fixdfdi _floatsidf _floatdidf _truncdfsf2 _extendsfdf2 _addsf3 _negsf2 _subsf3 _cmpsf2 _mulsf3 _divsf3; \
do \
  echo ${name}; \
  ln ../${srcdir}/gnulib.c ${name}.c; \
  cc -m32 -O -I../${srcdir} -c -DL${name} ${name}.c; \
  ar qc gnulib ${name}.o; \
done
cd ..
mv libtemp/gnulib .

pwd
if [ -f /usr/bin/ranlib ] ; then  ranlib gnulib ;fi

popd

echo "building gcc driver"
cc ${incs} -c -DSTANDARD_EXEC_PREFIX=\"/tmp/gcc1/gcc-1.27/lib/gcc-\" gcc.c -o ${builddir}/gcc.o
cc ${incs} -c -o ${bd}/version.o version.c
cc ${incs} -c -o ${bd}/obstack.o obstack.c
cc ${incs} -o ${bd}/gcc ${bd}/gcc.o ${bd}/version.o ${bd}/obstack.o
echo "driver built"

cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${bd}/toplev.o toplev.c

# FIXME ljw this should be regenerated with bison
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/c-parse.tab.o c-parse.tab.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/tree.o tree.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/print-tree.o print-tree.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/c-decl.o c-decl.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/c-typeck.o c-typeck.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/c-convert.o c-convert.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/stor-layout.o stor-layout.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/fold-const.o fold-const.c
cc -Iinclude -I/usr/include/i386-linux-gnu/   -c -o ${builddir}/rtl.o rtl.c
cc -Iinclude -I/usr/include/i386-linux-gnu/ -c genflags.c -o ${builddir}/genflags.o
cc -Iinclude -I/usr/include/i386-linux-gnu/  -o ${builddir}/genflags ${builddir}/genflags.o ${builddir}/rtl.o ${builddir}/obstack.o
${builddir}/genflags md > ${builddir}/insn-flags.h
cc -Iinclude -I/usr/include/i386-linux-gnu/ -c gencodes.c -o ${builddir}/gencodes.o
cc -Iinclude -I/usr/include/i386-linux-gnu/  -o ${bd}/gencodes ${builddir}/gencodes.o ${builddir}/rtl.o ${builddir}/obstack.o
${bd}/gencodes md > insn-codes.h
cc ${incs} -c genconfig.c -o ${bd}/genconfig.o
cc ${incs} -o ${bd}/genconfig ${bd}/genconfig.o ${bd}/rtl.o ${bd}/obstack.o
${bd}/genconfig md > ${bd}/insn-config.h

for i in expr stmt expmed explow optabs varasm symout dbxout sdbout emit-rtl genemit;
do
  cc ${incs} -c -o ${bd}/$i.o $i.c
done

cc -o ${bd}/genemit ${bd}/genemit.o ${bd}/rtl.o ${bd}/obstack.o
${bd}/genemit md > ${bd}/insn-emit.c
cc ${incs} -o ${bd}/insn-emit.o -c ${bd}/insn-emit.c

for i in integrate jump cse loop flow stupid combine regclass local-alloc global-alloc reload reload1 genpeep;
do
  cc ${incs} -c -o ${bd}/$i.o $i.c
done

cc -o ${bd}/genpeep ${bd}/genpeep.o ${bd}/rtl.o ${bd}/obstack.o
${bd}/genpeep md > ${bd}/insn-peep.c
cc ${incs} -c ${bd}/insn-peep.c -o ${bd}/insn-peep.o

for i in final recog genrecog;
do
  cc ${incs} -c -o ${bd}/$i.o $i.c
done

cc -o ${bd}/genrecog ${bd}/genrecog.o ${builddir}/rtl.o ${builddir}/obstack.o
${bd}/genrecog md > ${bd}/insn-recog.c
cc ${incs} -c ${bd}/insn-recog.c -o ${bd}/insn-recog.o

cc ${incs} -c genextract.c -o ${bd}/genextract.o
cc ${incs} -o ${bd}/genextract ${bd}/genextract.o ${bd}/rtl.o ${bd}/obstack.o
${bd}/genextract md > ${bd}/insn-extract.c
cc ${incs} -c ${bd}/insn-extract.c -o ${bd}/insn-extract.o

cc -Iinclude -I/usr/include/i386-linux-gnu/ -c genoutput.c
cc -Iinclude -I/usr/include/i386-linux-gnu/  -o ${bd}/genoutput genoutput.o ${builddir}/rtl.o ${builddir}/obstack.o
${bd}/genoutput md > ${bd}/insn-output.c

cc ${incs} -c ${bd}/insn-output.c -o ${bd}/insn-output.o

cc -o ${bd}/cc1 ${bd}/toplev.o ${builddir}/version.o ${builddir}/c-parse.tab.o ${builddir}/tree.o ${builddir}/print-tree.o ${builddir}/c-decl.o ${builddir}/c-typeck.o ${builddir}/c-convert.o ${builddir}/stor-layout.o ${builddir}/fold-const.o ${builddir}/rtl.o ${bd}/expr.o ${bd}/stmt.o ${bd}/expmed.o ${bd}/explow.o ${bd}/optabs.o ${bd}/varasm.o ${bd}/symout.o ${bd}/dbxout.o ${bd}/sdbout.o ${bd}/emit-rtl.o ${bd}/insn-emit.o ${bd}/integrate.o ${bd}/jump.o ${bd}/cse.o ${bd}/loop.o ${bd}/flow.o ${bd}/stupid.o ${bd}/combine.o ${bd}/regclass.o ${bd}/local-alloc.o ${bd}/global-alloc.o ${bd}/reload.o ${bd}/reload1.o ${bd}/insn-peep.o ${bd}/final.o ${bd}/recog.o ${bd}/insn-recog.o ${bd}/insn-extract.o ${bd}/insn-output.o ${builddir}/obstack.o

cc ${incs} -DGCC_INCLUDE_DIR=\"/tmp/gcc1/gcc-1.27/lib/gcc-include\" \
          -DGPLUSPLUS_INCLUDE_DIR=\"/tmp/gcc1/gcc-1.27/lib/g++-include\" -c cccp.c -o ${bd}/cccp.o

# FIXME this should be regenerated by bison
cc ${incs} -c -o ${bd}/cexp.o cexp.c
cc -o cpp ${bd}/cccp.o ${bd}/cexp.o ${bd}/version.o ${bd}/obstack.o
